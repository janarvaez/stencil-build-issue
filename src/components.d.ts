/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface UspAlert {
        /**
          * Determines the style of the message box
         */
        "type": 'error' | 'info' | 'warning';
    }
    interface UspDescriptionItem {
        "align": 'top' | 'middle' | 'bottom';
        /**
          * Text shown as header or title for the table
         */
        "header": string | HTMLElement;
    }
    interface UspDescriptions {
    }
    interface UspDivider {
        /**
          * Sets the spacing around the element
         */
        "spacing": [number, number?, number?, number?];
    }
    interface UspEmpty {
        /**
          * Text to display underneath the icon
         */
        "message": string;
    }
    interface UspList {
        /**
          * Sets different styles if this is a sublist (a list inside another list)
         */
        "sublist": boolean;
    }
}
declare global {
    interface HTMLUspAlertElement extends Components.UspAlert, HTMLStencilElement {
    }
    var HTMLUspAlertElement: {
        prototype: HTMLUspAlertElement;
        new (): HTMLUspAlertElement;
    };
    interface HTMLUspDescriptionItemElement extends Components.UspDescriptionItem, HTMLStencilElement {
    }
    var HTMLUspDescriptionItemElement: {
        prototype: HTMLUspDescriptionItemElement;
        new (): HTMLUspDescriptionItemElement;
    };
    interface HTMLUspDescriptionsElement extends Components.UspDescriptions, HTMLStencilElement {
    }
    var HTMLUspDescriptionsElement: {
        prototype: HTMLUspDescriptionsElement;
        new (): HTMLUspDescriptionsElement;
    };
    interface HTMLUspDividerElement extends Components.UspDivider, HTMLStencilElement {
    }
    var HTMLUspDividerElement: {
        prototype: HTMLUspDividerElement;
        new (): HTMLUspDividerElement;
    };
    interface HTMLUspEmptyElement extends Components.UspEmpty, HTMLStencilElement {
    }
    var HTMLUspEmptyElement: {
        prototype: HTMLUspEmptyElement;
        new (): HTMLUspEmptyElement;
    };
    interface HTMLUspListElement extends Components.UspList, HTMLStencilElement {
    }
    var HTMLUspListElement: {
        prototype: HTMLUspListElement;
        new (): HTMLUspListElement;
    };
    interface HTMLElementTagNameMap {
        "usp-alert": HTMLUspAlertElement;
        "usp-description-item": HTMLUspDescriptionItemElement;
        "usp-descriptions": HTMLUspDescriptionsElement;
        "usp-divider": HTMLUspDividerElement;
        "usp-empty": HTMLUspEmptyElement;
        "usp-list": HTMLUspListElement;
    }
}
declare namespace LocalJSX {
    interface UspAlert {
        /**
          * Determines the style of the message box
         */
        "type"?: 'error' | 'info' | 'warning';
    }
    interface UspDescriptionItem {
        "align"?: 'top' | 'middle' | 'bottom';
        /**
          * Text shown as header or title for the table
         */
        "header"?: string | HTMLElement;
    }
    interface UspDescriptions {
    }
    interface UspDivider {
        /**
          * Sets the spacing around the element
         */
        "spacing"?: [number, number?, number?, number?];
    }
    interface UspEmpty {
        /**
          * Text to display underneath the icon
         */
        "message"?: string;
    }
    interface UspList {
        /**
          * Sets different styles if this is a sublist (a list inside another list)
         */
        "sublist"?: boolean;
    }
    interface IntrinsicElements {
        "usp-alert": UspAlert;
        "usp-description-item": UspDescriptionItem;
        "usp-descriptions": UspDescriptions;
        "usp-divider": UspDivider;
        "usp-empty": UspEmpty;
        "usp-list": UspList;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "usp-alert": LocalJSX.UspAlert & JSXBase.HTMLAttributes<HTMLUspAlertElement>;
            "usp-description-item": LocalJSX.UspDescriptionItem & JSXBase.HTMLAttributes<HTMLUspDescriptionItemElement>;
            "usp-descriptions": LocalJSX.UspDescriptions & JSXBase.HTMLAttributes<HTMLUspDescriptionsElement>;
            "usp-divider": LocalJSX.UspDivider & JSXBase.HTMLAttributes<HTMLUspDividerElement>;
            "usp-empty": LocalJSX.UspEmpty & JSXBase.HTMLAttributes<HTMLUspEmptyElement>;
            "usp-list": LocalJSX.UspList & JSXBase.HTMLAttributes<HTMLUspListElement>;
        }
    }
}
